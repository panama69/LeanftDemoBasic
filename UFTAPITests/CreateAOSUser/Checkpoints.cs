//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.18408
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Script
{
    using System;
    using System.Xml;
    using System.Xml.Schema;
    using System.Collections.Generic;
    using HP.ST.Fwk.RunTimeFWK;
    using HP.ST.Fwk.RunTimeFWK.CheckpointFWK;
    using HP.ST.Fwk.RunTimeFWK.Utilities;
    using HP.ST.Ext.CheckpointLogicOperators;
    using HP.ST.Ext.BindingImpl.Getters;
    using HP.ST.Ext.BindingImpl.Setters;
    using HP.ST.Fwk.RunTimeFWK.BindingFWK;
    using HP.ST.Fwk.RunTimeFWK.BindingFWK.Getters;
    using HP.ST.Fwk.RunTimeFWK.BindingFWK.Setters;
    using HP.ST.Fwk.RunTimeFWK.BindingFWK.PropInfo;
    using HP.ST.Ext.CheckpointRules;
    using HP.ST.Ext.CheckpointRules.ArrayCheckpoints;
    
    
    public partial class WorkFlowScript
    {
        
        private void set_StServiceCallActivity4_checkpoints(STActivityBase activity)
        {
            VTDPropertyInfoBase stracturalOutputEnvelope = new VTDPropertyInfoBase("OutputEnvelope", "/*[local-name(.)=\'Envelope\'][1]");
            IList<VTDPropertyInfoBase> stracturalPropsInfo = new List<VTDPropertyInfoBase>();
            CpValObj ExpectedSchema = new CpValObj("<?xml version=\"1.0\" encoding=\"utf-16\"?><xs:schema xmlns=\"http://schemas.xmlsoap.o" +
                    "rg/soap/envelope/\" xmlns:vtd=\"hp.visual_test_designer\" elementFormDefault=\"quali" +
                    "fied\" targetNamespace=\"http://schemas.xmlsoap.org/soap/envelope/\" xmlns:xs=\"http" +
                    "://www.w3.org/2001/XMLSchema\"><xs:import schemaLocation=\"EmbeddedResources/accou" +
                    "ntser\\webServices\\accountser\\_1.xsd\" namespace=\"com.advantage.online.store.accou" +
                    "ntservice\" /><xs:attribute name=\"fullName\" type=\"xs:string\" /><xs:attribute name" +
                    "=\"group\" type=\"xs:string\" /><xs:attribute name=\"serialize\" type=\"xs:string\" /><x" +
                    "s:attribute name=\"argType\" type=\"xs:string\" /><xs:element name=\"Envelope\" type=\"" +
                    "Envelope\" /><xs:complexType name=\"Envelope\"><xs:sequence><xs:element minOccurs=\"" +
                    "0\" ref=\"Header\" /><xs:element minOccurs=\"1\" ref=\"Body\" /></xs:sequence><xs:anyAt" +
                    "tribute processContents=\"lax\" /></xs:complexType><xs:element name=\"Header\" type=" +
                    "\"Header\" /><xs:complexType name=\"Header\"><xs:sequence xmlns=\"\"><xs:any minOccurs" +
                    "=\"0\" maxOccurs=\"unbounded\" processContents=\"lax\" /></xs:sequence><xs:anyAttribut" +
                    "e processContents=\"lax\" /></xs:complexType><xs:element name=\"Body\" type=\"Body\" /" +
                    "><xs:complexType name=\"Body\"><xs:sequence xmlns=\"\"><xs:element xmlns:q1=\"com.adv" +
                    "antage.online.store.accountservice\" ref=\"q1:AccountCreateResponse\" /></xs:sequen" +
                    "ce><xs:anyAttribute namespace=\"##any\" processContents=\"lax\"><xs:annotation><xs:d" +
                    "ocumentation>Prose in the spec does not specify that attributes are allowed on t" +
                    "he Body element</xs:documentation></xs:annotation></xs:anyAttribute></xs:complex" +
                    "Type><xs:attribute name=\"mustUnderstand\"><xs:simpleType><xs:restriction base=\"xs" +
                    ":boolean\"><xs:pattern value=\"0|1\" /></xs:restriction></xs:simpleType></xs:attrib" +
                    "ute><xs:attribute name=\"actor\" type=\"xs:anyURI\" /><xs:simpleType name=\"encodingS" +
                    "tyle\"><xs:annotation><xs:documentation>\'encodingStyle\' indicates any canonicaliz" +
                    "ation conventions followed in the contents of the containing element.  For examp" +
                    "le, the value \'http://schemas.xmlsoap.org/soap/encoding/\' indicates the pattern " +
                    "described in SOAP specification</xs:documentation></xs:annotation><xs:list itemT" +
                    "ype=\"xs:anyURI\" /></xs:simpleType><xs:attribute name=\"encodingStyle\" type=\"encod" +
                    "ingStyle\" /><xs:attributeGroup name=\"encodingStyle\"><xs:attribute ref=\"encodingS" +
                    "tyle\" /></xs:attributeGroup><xs:element name=\"Fault\" type=\"Fault\" /><xs:complexT" +
                    "ype name=\"Fault\" final=\"extension\"><xs:annotation><xs:documentation>Fault report" +
                    "ing structure</xs:documentation></xs:annotation><xs:sequence><xs:element name=\"f" +
                    "aultcode\" type=\"xs:QName\" /><xs:element name=\"faultstring\" type=\"xs:string\" /><x" +
                    "s:element minOccurs=\"0\" name=\"faultactor\" type=\"xs:anyURI\" /><xs:element minOccu" +
                    "rs=\"0\" name=\"detail\" type=\"detail\" /></xs:sequence></xs:complexType><xs:complexT" +
                    "ype name=\"detail\"><xs:sequence><xs:any minOccurs=\"0\" maxOccurs=\"unbounded\" names" +
                    "pace=\"##any\" processContents=\"lax\" /></xs:sequence><xs:anyAttribute namespace=\"#" +
                    "#any\" processContents=\"lax\" /></xs:complexType></xs:schema>", XmlTypeCode.None);
            stracturalPropsInfo.Add(stracturalOutputEnvelope);
            BaseCPRule StracturalRule = new StracturalRule(activity, ExpectedSchema, stracturalPropsInfo);
            activity.AddCheckpointRule(StracturalRule);

            VTDPropertyInfoBase httpResponseHeaders = new VTDPropertyInfoBase("HttpResponseHeaders");
            VTDPropertyInfoBase outputEnvelope = new VTDPropertyInfoBase("OutputEnvelope", "/*[local-name(.)=\'Envelope\'][1]");
            IList<VTDPropertyInfoBase> propsInfo = new List<VTDPropertyInfoBase>();
            propsInfo.Add(httpResponseHeaders);
            propsInfo.Add(outputEnvelope);
            BaseCPRule WSIRule = new WSIRule(activity, propsInfo);
            activity.AddCheckpointRule(WSIRule);

        }
    }
}
